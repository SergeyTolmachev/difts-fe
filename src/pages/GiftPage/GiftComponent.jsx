import styles from "./GiftComponent.module.scss";
import GiftIcon from "../../../assets/tonIcon.svg";
import { TonConnectButton } from "@tonconnect/ui-react";
import { useEffect, useState } from "react";
import { useQuery } from "@tanstack/react-query";
import axios from "axios";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω
const fetchCountries = async () => {
  const response = await axios.get("http://localhost:3000/countries");
  return response.data;
};

export const GiftComponent = () => {
  const [tonPrice, setTonPrice] = useState(0);

  useEffect(() => {
    const fetchTonPrice = async () => {
      const response = await fetch(
        "https://api.coingecko.com/api/v3/simple/price?ids=the-open-network&vs_currencies=usd"
      );
      const data = await response.json();
      setTonPrice(data["the-open-network"].usd);
    };
    fetchTonPrice();
  }, []);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º React Query –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω
  const {
    data: countries,
    error: countriesError,
    isLoading: isCountriesLoading,
  } = useQuery({
    queryKey: ["countries"],
    queryFn: fetchCountries,
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω
  if (isCountriesLoading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω...</div>;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è —Å—Ç—Ä–∞–Ω
  if (countriesError)
    return <div>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω: {countriesError.message}</div>;

  return (
    <div className={styles.gift_container}>
      <div className={styles.currency_circle}>
        <img src={GiftIcon} alt="Gift Icon" className={styles.gift_icon} />
        {tonPrice}
      </div>
      <div className={styles.gift_img}>üéÅ</div>
      <div className={styles.gift_title}>–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω</div>
      <ul className={styles.gift_description}>
        {countries.map((country) => (
          <li key={country.id}>{country.name}</li>
        ))}
      </ul>
      <button className={styles.send_gift_button}>Send a gift</button>
      <TonConnectButton className={styles.connect_wallet_button} />
    </div>
  );
};
